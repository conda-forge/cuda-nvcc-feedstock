{% set name = "cuda-nvcc-split" %}
{% set version = "13.0.88" %}
{% set cuda_version = "13.0" %}
{% set exists = "which" %}  # [not win]
{% set exists = "where" %}  # [win]

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  # Using this license for consistent messaging with the components it relies on
  url: https://developer.download.nvidia.com/compute/cuda/redist/cuda_nvcc/LICENSE.txt
  sha256: e2c71babfd18a8e69542dd7e9ca018f9caa438094001a58e6bc4d8c999bf0d07

{% set number = 3 %}
{% if arm_variant_target == "sbsa" %}
{% set number = number + 100 %}
{% endif %}

build:
  number: {{ number }}
  skip: true  # [osx or ppc64le]
  skip: true  # [target_platform != "linux-64" and target_platform != cross_target_platform]
  script_env:
  # We need to reference these variables in the recipe or conda-smithy will prune them from
  # the conda_build_config
    - DEFAULT_CUDAARCHS={{ DEFAULT_CUDAARCHS }}

requirements:
  build:
    - cf-nvidia-tools 1.*  # [linux]
    - m2-sed  # [win]

outputs:
  - name: cuda-nvcc
    build:
      skip: true  # [target_platform != cross_target_platform]
    requirements:
      run:
        - cuda-nvcc_{{ target_platform }} {{ version }}.*
        # Relax build time constraints from compilers
        # Constraints on compilers exist in `cuda-nvcc-impl`
        - {{ c_compiler }}_{{ target_platform }}
        - {{ cxx_compiler }}_{{ target_platform }}
    test:
      commands:
        - test -f $PREFIX/bin/nvcc                          # [linux]
        - if not exist %LIBRARY_BIN%\nvcc.exe exit 1        # [win]
    about:
      home: https://developer.nvidia.com/cuda-toolkit
      license_file: LICENSE.txt
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: Compiler for CUDA applications.
      description: |
        Compiler for CUDA applications.
      doc_url: https://docs.nvidia.com/cuda/index.html

  - name: cuda-nvcc_{{ cross_target_platform }}
    run_exports:
      strong:
        - cuda-version >={{ cuda_version }},<{{ cuda_version.split(".")[0]|int + 1 }}
        - arm-variant * {{ arm_variant_target }}  # [arm_variant_target != "None"]
    files:
      - etc/conda/activate.d/~cuda-nvcc_activate.sh       # [linux]
      - etc/conda/deactivate.d/~cuda-nvcc_deactivate.sh   # [linux]
      - etc/conda/activate.d/~cuda-nvcc_activate.bat      # [win]
      - etc/conda/deactivate.d/~cuda-nvcc_deactivate.bat  # [win]
    requirements:
      host:
        - {{ c_stdlib }}_{{ cross_target_platform }} {{ c_stdlib_version }}  # [linux]
      run:
        - cuda-nvcc-dev_{{ cross_target_platform }} {{ version }}.*
        - cuda-cudart-dev_{{ cross_target_platform }} {{ cuda_version }}.*
        - cuda-driver-dev_{{ cross_target_platform }} {{ cuda_version }}.*  # [linux]
        - cuda-nvcc-tools {{ version }}.*
        - cuda-nvcc-impl {{ version }}.*   # [target_platform == cross_target_platform]
        - {{ pin_compatible(c_stdlib ~ "_" ~ cross_target_platform) }}  # [linux]
        - arm-variant * {{ arm_variant_target }}  # [arm_variant_target != "None"]
    test:
      requires:
        - {{ c_compiler }}_{{ cross_target_platform }} {{ c_compiler_version }}.*      # [linux]
        - {{ cxx_compiler }}_{{ cross_target_platform }} {{ cxx_compiler_version }}.*  # [linux]
        - {{ c_compiler }}_{{ cross_target_platform }}    # [win]
        - {{ cxx_compiler }}_{{ cross_target_platform }}  # [win]
        - cmake
        - ninja
        - git    # [linux]
      files:
        - test.cpp
        - test.cu
        - CMakeLists.txt
        - run_nvcc_tests.sh   # [linux]
        - run_nvcc_tests.bat  # [win]
      commands:
        - {{ exists }} nvcc
        - ./run_nvcc_tests.sh   # [linux]
        - .\run_nvcc_tests.bat  # [win]
        - test -f $PREFIX/etc/conda/activate.d/~cuda-nvcc_activate.sh      # [linux]
        - test -f $PREFIX/etc/conda/deactivate.d/~cuda-nvcc_deactivate.sh  # [linux]
    about:
      home: https://developer.nvidia.com/cuda-toolkit
      license_file: LICENSE.txt
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: Compiler activation scripts for CUDA applications.
      description: |
        Compiler for CUDA applications.
      doc_url: https://docs.nvidia.com/cuda/index.html

  - name: cuda-crt
    build:
      skip: true  # [target_platform != cross_target_platform]
    requirements:
      run:
        - cuda-crt-dev_{{ target_platform }} {{ version }}.*
        - cuda-crt-tools {{ version }}.*
    test:
      commands:
        - test -f $PREFIX/bin/crt/link.stub                 # [linux]
        - if not exist %LIBRARY_BIN%\crt exit 1             # [win]
    about:
      home: https://developer.nvidia.com/cuda-toolkit
      license_file: LICENSE.txt
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: CUDA internal headers.
      description: |
        CUDA internal headers.
      doc_url: https://docs.nvidia.com/cuda/index.html

  - name: cuda-nvvm
    build:
      skip: true  # [target_platform != cross_target_platform]
    requirements:
      run:
        - cuda-nvvm-dev_{{ target_platform }} {{ version }}.*
        - cuda-nvvm-tools {{ version }}.*
        - cuda-nvvm-impl {{ version }}.*
    test:
      commands:
        - test -f $PREFIX/nvvm/bin/cicc                           # [linux]
        - test -d $PREFIX/nvvm/libdevice                          # [linux]
        - test -d $PREFIX/nvvm/include                            # [linux]
        - test -d $PREFIX/nvvm/lib64                              # [linux]
        - if not exist %LIBRARY_PREFIX%\nvvm\bin\cicc.exe exit 1  # [win]
        - if not exist %LIBRARY_PREFIX%\nvvm\libdevice exit 1     # [win]
        - if not exist %LIBRARY_PREFIX%\nvvm\include exit 1       # [win]
        - if not exist %LIBRARY_PREFIX%\nvvm\lib exit 1           # [win]
    about:
      home: https://developer.nvidia.com/cuda-toolkit
      license_file: LICENSE.txt
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: Compiler for CUDA applications.
      description: |
        Compiler for CUDA applications.
      doc_url: https://docs.nvidia.com/cuda/index.html

about:
  home: https://developer.nvidia.com/cuda-toolkit
  license_file: LICENSE.txt
  license: LicenseRef-NVIDIA-End-User-License-Agreement
  license_url: https://docs.nvidia.com/cuda/eula/index.html
  summary: Compiler for CUDA applications.
  description: |
    Compiler for CUDA applications.
  doc_url: https://docs.nvidia.com/cuda/index.html

extra:
  feedstock-name: cuda-nvcc
  recipe-maintainers:
    - conda-forge/cuda
